// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: econ_gcmessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "econ_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgGCGiftedItems_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCGiftedItems_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgApplyAutograph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgApplyAutograph_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgCasketItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgCasketItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCUserTrackTimePlayedConsecutively_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCUserTrackTimePlayedConsecutively_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgGCItemCustomizationNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCItemCustomizationNotification_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCItemMsg_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCMsgResponse_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EUnlockStyle_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCItemCustomizationNotification_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_econ_5fgcmessages_2eproto() {
  protobuf_AddDesc_econ_5fgcmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "econ_gcmessages.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgGCGiftedItems_descriptor_ = file->message_type(0);
  static const int CMsgGCGiftedItems_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGiftedItems, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGiftedItems, giftdefindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGiftedItems, max_gifts_possible_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGiftedItems, num_eligible_recipients_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGiftedItems, recipients_accountids_),
  };
  CMsgGCGiftedItems_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCGiftedItems_descriptor_,
      CMsgGCGiftedItems::default_instance_,
      CMsgGCGiftedItems_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGiftedItems, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCGiftedItems, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCGiftedItems));
  CMsgApplyAutograph_descriptor_ = file->message_type(1);
  static const int CMsgApplyAutograph_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, autograph_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, item_item_id_),
  };
  CMsgApplyAutograph_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgApplyAutograph_descriptor_,
      CMsgApplyAutograph::default_instance_,
      CMsgApplyAutograph_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgApplyAutograph));
  CMsgCasketItem_descriptor_ = file->message_type(2);
  static const int CMsgCasketItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCasketItem, casket_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCasketItem, item_item_id_),
  };
  CMsgCasketItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgCasketItem_descriptor_,
      CMsgCasketItem::default_instance_,
      CMsgCasketItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCasketItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCasketItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgCasketItem));
  CMsgGCUserTrackTimePlayedConsecutively_descriptor_ = file->message_type(3);
  static const int CMsgGCUserTrackTimePlayedConsecutively_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCUserTrackTimePlayedConsecutively, state_),
  };
  CMsgGCUserTrackTimePlayedConsecutively_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCUserTrackTimePlayedConsecutively_descriptor_,
      CMsgGCUserTrackTimePlayedConsecutively::default_instance_,
      CMsgGCUserTrackTimePlayedConsecutively_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCUserTrackTimePlayedConsecutively, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCUserTrackTimePlayedConsecutively, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCUserTrackTimePlayedConsecutively));
  CMsgGCItemCustomizationNotification_descriptor_ = file->message_type(4);
  static const int CMsgGCItemCustomizationNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCItemCustomizationNotification, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCItemCustomizationNotification, request_),
  };
  CMsgGCItemCustomizationNotification_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCItemCustomizationNotification_descriptor_,
      CMsgGCItemCustomizationNotification::default_instance_,
      CMsgGCItemCustomizationNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCItemCustomizationNotification, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCItemCustomizationNotification, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCItemCustomizationNotification));
  EGCItemMsg_descriptor_ = file->enum_type(0);
  EGCMsgResponse_descriptor_ = file->enum_type(1);
  EUnlockStyle_descriptor_ = file->enum_type(2);
  EGCItemCustomizationNotification_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_econ_5fgcmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCGiftedItems_descriptor_, &CMsgGCGiftedItems::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgApplyAutograph_descriptor_, &CMsgApplyAutograph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgCasketItem_descriptor_, &CMsgCasketItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCUserTrackTimePlayedConsecutively_descriptor_, &CMsgGCUserTrackTimePlayedConsecutively::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCItemCustomizationNotification_descriptor_, &CMsgGCItemCustomizationNotification::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_econ_5fgcmessages_2eproto() {
  delete CMsgGCGiftedItems::default_instance_;
  delete CMsgGCGiftedItems_reflection_;
  delete CMsgApplyAutograph::default_instance_;
  delete CMsgApplyAutograph_reflection_;
  delete CMsgCasketItem::default_instance_;
  delete CMsgCasketItem_reflection_;
  delete CMsgGCUserTrackTimePlayedConsecutively::default_instance_;
  delete CMsgGCUserTrackTimePlayedConsecutively_reflection_;
  delete CMsgGCItemCustomizationNotification::default_instance_;
  delete CMsgGCItemCustomizationNotification_reflection_;
}

void protobuf_AddDesc_econ_5fgcmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_steammessages_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025econ_gcmessages.proto\032\023steammessages.p"
    "roto\"\230\001\n\021CMsgGCGiftedItems\022\021\n\taccountid\030"
    "\001 \001(\r\022\024\n\014giftdefindex\030\002 \001(\r\022\032\n\022max_gifts"
    "_possible\030\003 \001(\r\022\037\n\027num_eligible_recipien"
    "ts\030\004 \001(\r\022\035\n\025recipients_accountids\030\005 \003(\r\""
    "E\n\022CMsgApplyAutograph\022\031\n\021autograph_item_"
    "id\030\001 \001(\004\022\024\n\014item_item_id\030\002 \001(\004\">\n\016CMsgCa"
    "sketItem\022\026\n\016casket_item_id\030\001 \001(\004\022\024\n\014item"
    "_item_id\030\002 \001(\004\"7\n&CMsgGCUserTrackTimePla"
    "yedConsecutively\022\r\n\005state\030\001 \001(\r\"G\n#CMsgG"
    "CItemCustomizationNotification\022\017\n\007item_i"
    "d\030\001 \003(\004\022\017\n\007request\030\002 \001(\r*\207(\n\nEGCItemMsg\022"
    "\021\n\014k_EMsgGCBase\020\350\007\022\034\n\027k_EMsgGCSetItemPos"
    "ition\020\351\007\022\022\n\rk_EMsgGCCraft\020\352\007\022\032\n\025k_EMsgGC"
    "CraftResponse\020\353\007\022\023\n\016k_EMsgGCDelete\020\354\007\022$\n"
    "\037k_EMsgGCVerifyCacheSubscription\020\355\007\022\025\n\020k"
    "_EMsgGCNameItem\020\356\007\022\030\n\023k_EMsgGCUnlockCrat"
    "e\020\357\007\022 \n\033k_EMsgGCUnlockCrateResponse\020\360\007\022\026"
    "\n\021k_EMsgGCPaintItem\020\361\007\022\036\n\031k_EMsgGCPaintI"
    "temResponse\020\362\007\022\"\n\035k_EMsgGCGoldenWrenchBr"
    "oadcast\020\363\007\022\030\n\023k_EMsgGCMOTDRequest\020\364\007\022 \n\033"
    "k_EMsgGCMOTDRequestResponse\020\365\007\022\'\n\"k_EMsg"
    "GCAddItemToSocket_DEPRECATED\020\366\007\022/\n*k_EMs"
    "gGCAddItemToSocketResponse_DEPRECATED\020\367\007"
    "\022+\n&k_EMsgGCAddSocketToBaseItem_DEPRECAT"
    "ED\020\370\007\022\'\n\"k_EMsgGCAddSocketToItem_DEPRECA"
    "TED\020\371\007\022/\n*k_EMsgGCAddSocketToItemRespons"
    "e_DEPRECATED\020\372\007\022\031\n\024k_EMsgGCNameBaseItem\020"
    "\373\007\022!\n\034k_EMsgGCNameBaseItemResponse\020\374\007\022(\n"
    "#k_EMsgGCRemoveSocketItem_DEPRECATED\020\375\007\022"
    "0\n+k_EMsgGCRemoveSocketItemResponse_DEPR"
    "ECATED\020\376\007\022!\n\034k_EMsgGCCustomizeItemTextur"
    "e\020\377\007\022)\n$k_EMsgGCCustomizeItemTextureResp"
    "onse\020\200\010\022\033\n\026k_EMsgGCUseItemRequest\020\201\010\022\034\n\027"
    "k_EMsgGCUseItemResponse\020\202\010\022#\n\036k_EMsgGCGi"
    "ftedItems_DEPRECATED\020\203\010\022\033\n\026k_EMsgGCRemov"
    "eItemName\020\206\010\022\034\n\027k_EMsgGCRemoveItemPaint\020"
    "\207\010\022\031\n\024k_EMsgGCGiftWrapItem\020\210\010\022!\n\034k_EMsgG"
    "CGiftWrapItemResponse\020\211\010\022\030\n\023k_EMsgGCDeli"
    "verGift\020\212\010\022%\n k_EMsgGCDeliverGiftRespons"
    "eGiver\020\213\010\022(\n#k_EMsgGCDeliverGiftResponse"
    "Receiver\020\214\010\022\036\n\031k_EMsgGCUnwrapGiftRequest"
    "\020\215\010\022\037\n\032k_EMsgGCUnwrapGiftResponse\020\216\010\022\031\n\024"
    "k_EMsgGCSetItemStyle\020\217\010\022\036\n\031k_EMsgGCUsedC"
    "laimCodeItem\020\220\010\022\026\n\021k_EMsgGCSortItems\020\221\010\022"
    "*\n%k_EMsgGC_RevolvingLootList_DEPRECATED"
    "\020\222\010\022\032\n\025k_EMsgGCLookupAccount\020\223\010\022\"\n\035k_EMs"
    "gGCLookupAccountResponse\020\224\010\022\036\n\031k_EMsgGCL"
    "ookupAccountName\020\225\010\022&\n!k_EMsgGCLookupAcc"
    "ountNameResponse\020\226\010\022\035\n\030k_EMsgGCUpdateIte"
    "mSchema\020\231\010\022 \n\033k_EMsgGCRemoveCustomTextur"
    "e\020\233\010\022(\n#k_EMsgGCRemoveCustomTextureRespo"
    "nse\020\234\010\022\035\n\030k_EMsgGCRemoveMakersMark\020\235\010\022%\n"
    " k_EMsgGCRemoveMakersMarkResponse\020\236\010\022#\n\036"
    "k_EMsgGCRemoveUniqueCraftIndex\020\237\010\022+\n&k_E"
    "MsgGCRemoveUniqueCraftIndexResponse\020\240\010\022\033"
    "\n\026k_EMsgGCSaxxyBroadcast\020\241\010\022!\n\034k_EMsgGCB"
    "ackpackSortFinished\020\242\010\022$\n\037k_EMsgGCAdjust"
    "ItemEquippedState\020\243\010\022\030\n\023k_EMsgGCCollectI"
    "tem\020\245\010\022)\n$k_EMsgGCItemAcknowledged__DEPR"
    "ECATED\020\246\010\022\031\n\024k_EMsgGC_ReportAbuse\020\251\010\022!\n\034"
    "k_EMsgGC_ReportAbuseResponse\020\252\010\022!\n\034k_EMs"
    "gGCNameItemNotification\020\254\010\022#\n\036k_EMsgGCAp"
    "plyConsumableEffects\020\255\010\022 \n\033k_EMsgGCConsu"
    "mableExhausted\020\256\010\022\036\n\031k_EMsgGCShowItemsPi"
    "ckedUp\020\257\010\022&\n!k_EMsgGCClientDisplayNotifi"
    "cation\020\260\010\022\035\n\030k_EMsgGCApplyStrangePart\020\261\010"
    "\022)\n$k_EMsgGC_IncrementKillCountAttribute"
    "\020\262\010\022(\n#k_EMsgGC_IncrementKillCountRespon"
    "se\020\263\010\022 \n\033k_EMsgGCApplyPennantUpgrade\020\264\010\022"
    "\035\n\030k_EMsgGCSetItemPositions\020\265\010\022\034\n\027k_EMsg"
    "GCApplyEggEssence\020\266\010\022#\n\036k_EMsgGCNameEggE"
    "ssenceResponse\020\267\010\022\031\n\024k_EMsgGCPaintKitIte"
    "m\020\270\010\022\035\n\030k_EMsgGCPaintKitBaseItem\020\271\010\022!\n\034k"
    "_EMsgGCPaintKitItemResponse\020\272\010\022\030\n\023k_EMsg"
    "GCGiftedItems\020\273\010\022\034\n\027k_EMsgGCUnlockItemSt"
    "yle\020\274\010\022$\n\037k_EMsgGCUnlockItemStyleRespons"
    "e\020\275\010\022\031\n\024k_EMsgGCApplySticker\020\276\010\022\035\n\030k_EMs"
    "gGCItemAcknowledged\020\277\010\022\031\n\024k_EMsgGCStatTr"
    "akSwap\020\300\010\022-\n(k_EMsgGCUserTrackTimePlayed"
    "Consecutively\020\301\010\022*\n%k_EMsgGCItemCustomiz"
    "ationNotification\020\302\010\022 \n\033k_EMsgGCModifyIt"
    "emAttribute\020\303\010\022\032\n\025k_EMsgGCCasketItemAdd\020"
    "\304\010\022\036\n\031k_EMsgGCCasketItemExtract\020\305\010\022#\n\036k_"
    "EMsgGCCasketItemLoadContents\020\306\010\022\030\n\023k_EMs"
    "gGCTradingBase\020\334\013\022)\n$k_EMsgGCTrading_Ini"
    "tiateTradeRequest\020\335\013\022*\n%k_EMsgGCTrading_"
    "InitiateTradeResponse\020\336\013\022!\n\034k_EMsgGCTrad"
    "ing_StartSession\020\337\013\022\034\n\027k_EMsgGCTrading_S"
    "etItem\020\340\013\022\037\n\032k_EMsgGCTrading_RemoveItem\020"
    "\341\013\022$\n\037k_EMsgGCTrading_UpdateTradeInfo\020\342\013"
    "\022!\n\034k_EMsgGCTrading_SetReadiness\020\343\013\022&\n!k"
    "_EMsgGCTrading_ReadinessResponse\020\344\013\022\"\n\035k"
    "_EMsgGCTrading_SessionClosed\020\345\013\022\"\n\035k_EMs"
    "gGCTrading_CancelSession\020\346\013\022!\n\034k_EMsgGCT"
    "rading_TradeChatMsg\020\347\013\022!\n\034k_EMsgGCTradin"
    "g_ConfirmOffer\020\350\013\022\'\n\"k_EMsgGCTrading_Tra"
    "deTypingChatMsg\020\351\013\022)\n$k_EMsgGCServerBrow"
    "ser_FavoriteServer\020\301\014\022*\n%k_EMsgGCServerB"
    "rowser_BlacklistServer\020\302\014\022\036\n\031k_EMsgGCSer"
    "verRentalsBase\020\244\r\022#\n\036k_EMsgGCItemPreview"
    "CheckStatus\020\245\r\022&\n!k_EMsgGCItemPreviewSta"
    "tusResponse\020\246\r\022\037\n\032k_EMsgGCItemPreviewReq"
    "uest\020\247\r\022\'\n\"k_EMsgGCItemPreviewRequestRes"
    "ponse\020\250\r\022\036\n\031k_EMsgGCItemPreviewExpire\020\251\r"
    "\022*\n%k_EMsgGCItemPreviewExpireNotificatio"
    "n\020\252\r\022.\n)k_EMsgGCItemPreviewItemBoughtNot"
    "ification\020\253\r\022\037\n\032k_EMsgGCDev_NewItemReque"
    "st\020\321\017\022\'\n\"k_EMsgGCDev_NewItemRequestRespo"
    "nse\020\322\017\022!\n\034k_EMsgGCDev_PaintKitDropItem\020\323"
    "\017\022\035\n\030k_EMsgGCStoreGetUserData\020\304\023\022%\n k_EM"
    "sgGCStoreGetUserDataResponse\020\305\023\022)\n$k_EMs"
    "gGCStorePurchaseInit_DEPRECATED\020\306\023\0221\n,k_"
    "EMsgGCStorePurchaseInitResponse_DEPRECAT"
    "ED\020\307\023\022\"\n\035k_EMsgGCStorePurchaseFinalize\020\310"
    "\023\022*\n%k_EMsgGCStorePurchaseFinalizeRespon"
    "se\020\311\023\022 \n\033k_EMsgGCStorePurchaseCancel\020\312\023\022"
    "(\n#k_EMsgGCStorePurchaseCancelResponse\020\313"
    "\023\022\"\n\035k_EMsgGCStorePurchaseQueryTxn\020\314\023\022*\n"
    "%k_EMsgGCStorePurchaseQueryTxnResponse\020\315"
    "\023\022\036\n\031k_EMsgGCStorePurchaseInit\020\316\023\022&\n!k_E"
    "MsgGCStorePurchaseInitResponse\020\317\023\022\"\n\035k_E"
    "MsgGCBannedWordListRequest\020\320\023\022#\n\036k_EMsgG"
    "CBannedWordListResponse\020\321\023\022(\n#k_EMsgGCTo"
    "GCBannedWordListBroadcast\020\322\023\022&\n!k_EMsgGC"
    "ToGCBannedWordListUpdated\020\323\023\022\036\n\031k_EMsgGC"
    "ToGCDirtySDOCache\020\324\023\022&\n!k_EMsgGCToGCDirt"
    "yMultipleSDOCache\020\325\023\022\"\n\035k_EMsgGCToGCUpda"
    "teSQLKeyValue\020\326\023\022 \n\033k_EMsgGCToGCIsTruste"
    "dServer\020\327\023\022(\n#k_EMsgGCToGCIsTrustedServe"
    "rResponse\020\330\023\022(\n#k_EMsgGCToGCBroadcastCon"
    "soleCommand\020\331\023\022!\n\034k_EMsgGCServerVersionU"
    "pdated\020\332\023\022\033\n\026k_EMsgGCApplyAutograph\020\333\023\022%"
    "\n k_EMsgGCToGCWebAPIAccountChanged\020\334\023\022!\n"
    "\034k_EMsgGCRequestAnnouncements\020\335\023\022)\n$k_EM"
    "sgGCRequestAnnouncementsResponse\020\336\023\022%\n k"
    "_EMsgGCRequestPassportItemGrant\020\337\023\022!\n\034k_"
    "EMsgGCClientVersionUpdated\020\340\023\022)\n$k_EMsgG"
    "CAdjustItemEquippedStateMulti\020\341\023\022(\n#k_EM"
    "sgGCRecurringSubscriptionStatus\020\342\023*\325\002\n\016E"
    "GCMsgResponse\022\026\n\022k_EGCMsgResponseOK\020\000\022\032\n"
    "\026k_EGCMsgResponseDenied\020\001\022\037\n\033k_EGCMsgRes"
    "ponseServerError\020\002\022\033\n\027k_EGCMsgResponseTi"
    "meout\020\003\022\033\n\027k_EGCMsgResponseInvalid\020\004\022\033\n\027"
    "k_EGCMsgResponseNoMatch\020\005\022 \n\034k_EGCMsgRes"
    "ponseUnknownError\020\006\022\037\n\033k_EGCMsgResponseN"
    "otLoggedOn\020\007\022\032\n\026k_EGCMsgFailedToCreate\020\010"
    "\022\031\n\025k_EGCMsgLimitExceeded\020\t\022\035\n\031k_EGCMsgC"
    "ommitUnfinalized\020\n*\351\001\n\014EUnlockStyle\022\033\n\027k"
    "_UnlockStyle_Succeeded\020\000\022\037\n\033k_UnlockStyl"
    "e_Failed_PreReq\020\001\022#\n\037k_UnlockStyle_Faile"
    "d_CantAfford\020\002\022#\n\037k_UnlockStyle_Failed_C"
    "antCommit\020\003\022&\n\"k_UnlockStyle_Failed_Cant"
    "LockCache\020\004\022)\n%k_UnlockStyle_Failed_Cant"
    "AffordAttrib\020\005*\262\t\n EGCItemCustomizationN"
    "otification\0220\n+k_EGCItemCustomizationNot"
    "ification_NameItem\020\356\007\0223\n.k_EGCItemCustom"
    "izationNotification_UnlockCrate\020\357\007\0226\n1k_"
    "EGCItemCustomizationNotification_XRayIte"
    "mReveal\020\360\007\0225\n0k_EGCItemCustomizationNoti"
    "fication_XRayItemClaim\020\361\007\0225\n0k_EGCItemCu"
    "stomizationNotification_CasketTooFull\020\363\007"
    "\0226\n1k_EGCItemCustomizationNotification_C"
    "asketContents\020\364\007\0223\n.k_EGCItemCustomizati"
    "onNotification_CasketAdded\020\365\007\0225\n0k_EGCIt"
    "emCustomizationNotification_CasketRemove"
    "d\020\366\007\0225\n0k_EGCItemCustomizationNotificati"
    "on_CasketInvFull\020\367\007\0224\n/k_EGCItemCustomiz"
    "ationNotification_NameBaseItem\020\373\007\0226\n1k_E"
    "GCItemCustomizationNotification_RemoveIt"
    "emName\020\206\010\0225\n0k_EGCItemCustomizationNotif"
    "ication_RemoveSticker\020\235\010\0224\n/k_EGCItemCus"
    "tomizationNotification_ApplySticker\020\276\010\0224"
    "\n/k_EGCItemCustomizationNotification_Sta"
    "tTrakSwap\020\300\010\0223\n.k_EGCItemCustomizationNo"
    "tification_RemovePatch\020\301\010\0222\n-k_EGCItemCu"
    "stomizationNotification_ApplyPatch\020\302\010\0228\n"
    "3k_EGCItemCustomizationNotification_Acti"
    "vateFanToken\020\332G\022=\n8k_EGCItemCustomizatio"
    "nNotification_ActivateOperationCoin\020\333G\0226"
    "\n1k_EGCItemCustomizationNotification_Gra"
    "ffitiUnseal\020\341G\0228\n3k_EGCItemCustomization"
    "Notification_GenerateSouvenir\020\364G\022A\n<k_EG"
    "CItemCustomizationNotification_ClientRed"
    "eemMissionReward\020\371GB\005H\001\200\001\000", 7386);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "econ_gcmessages.proto", &protobuf_RegisterTypes);
  CMsgGCGiftedItems::default_instance_ = new CMsgGCGiftedItems();
  CMsgApplyAutograph::default_instance_ = new CMsgApplyAutograph();
  CMsgCasketItem::default_instance_ = new CMsgCasketItem();
  CMsgGCUserTrackTimePlayedConsecutively::default_instance_ = new CMsgGCUserTrackTimePlayedConsecutively();
  CMsgGCItemCustomizationNotification::default_instance_ = new CMsgGCItemCustomizationNotification();
  CMsgGCGiftedItems::default_instance_->InitAsDefaultInstance();
  CMsgApplyAutograph::default_instance_->InitAsDefaultInstance();
  CMsgCasketItem::default_instance_->InitAsDefaultInstance();
  CMsgGCUserTrackTimePlayedConsecutively::default_instance_->InitAsDefaultInstance();
  CMsgGCItemCustomizationNotification::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_econ_5fgcmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_econ_5fgcmessages_2eproto {
  StaticDescriptorInitializer_econ_5fgcmessages_2eproto() {
    protobuf_AddDesc_econ_5fgcmessages_2eproto();
  }
} static_descriptor_initializer_econ_5fgcmessages_2eproto_;
const ::google::protobuf::EnumDescriptor* EGCItemMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCItemMsg_descriptor_;
}
bool EGCItemMsg_IsValid(int value) {
  switch(value) {
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1035:
    case 1036:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1043:
    case 1044:
    case 1045:
    case 1046:
    case 1049:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1057:
    case 1058:
    case 1059:
    case 1061:
    case 1062:
    case 1065:
    case 1066:
    case 1068:
    case 1069:
    case 1070:
    case 1071:
    case 1072:
    case 1073:
    case 1074:
    case 1075:
    case 1076:
    case 1077:
    case 1078:
    case 1079:
    case 1080:
    case 1081:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 1094:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1504:
    case 1505:
    case 1506:
    case 1507:
    case 1508:
    case 1509:
    case 1510:
    case 1511:
    case 1512:
    case 1513:
    case 1601:
    case 1602:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 1706:
    case 1707:
    case 2001:
    case 2002:
    case 2003:
    case 2500:
    case 2501:
    case 2502:
    case 2503:
    case 2504:
    case 2505:
    case 2506:
    case 2507:
    case 2508:
    case 2509:
    case 2510:
    case 2511:
    case 2512:
    case 2513:
    case 2514:
    case 2515:
    case 2516:
    case 2517:
    case 2518:
    case 2519:
    case 2520:
    case 2521:
    case 2522:
    case 2523:
    case 2524:
    case 2525:
    case 2526:
    case 2527:
    case 2528:
    case 2529:
    case 2530:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCMsgResponse_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCMsgResponse_descriptor_;
}
bool EGCMsgResponse_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EUnlockStyle_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EUnlockStyle_descriptor_;
}
bool EUnlockStyle_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCItemCustomizationNotification_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCItemCustomizationNotification_descriptor_;
}
bool EGCItemCustomizationNotification_IsValid(int value) {
  switch(value) {
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1019:
    case 1030:
    case 1053:
    case 1086:
    case 1088:
    case 1089:
    case 1090:
    case 9178:
    case 9179:
    case 9185:
    case 9204:
    case 9209:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCGiftedItems::kAccountidFieldNumber;
const int CMsgGCGiftedItems::kGiftdefindexFieldNumber;
const int CMsgGCGiftedItems::kMaxGiftsPossibleFieldNumber;
const int CMsgGCGiftedItems::kNumEligibleRecipientsFieldNumber;
const int CMsgGCGiftedItems::kRecipientsAccountidsFieldNumber;
#endif  // !_MSC_VER

CMsgGCGiftedItems::CMsgGCGiftedItems()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGCGiftedItems::InitAsDefaultInstance() {
}

CMsgGCGiftedItems::CMsgGCGiftedItems(const CMsgGCGiftedItems& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGCGiftedItems::SharedCtor() {
  _cached_size_ = 0;
  accountid_ = 0u;
  giftdefindex_ = 0u;
  max_gifts_possible_ = 0u;
  num_eligible_recipients_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCGiftedItems::~CMsgGCGiftedItems() {
  SharedDtor();
}

void CMsgGCGiftedItems::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCGiftedItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGiftedItems::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCGiftedItems_descriptor_;
}

const CMsgGCGiftedItems& CMsgGCGiftedItems::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCGiftedItems* CMsgGCGiftedItems::default_instance_ = NULL;

CMsgGCGiftedItems* CMsgGCGiftedItems::New() const {
  return new CMsgGCGiftedItems;
}

void CMsgGCGiftedItems::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    accountid_ = 0u;
    giftdefindex_ = 0u;
    max_gifts_possible_ = 0u;
    num_eligible_recipients_ = 0u;
  }
  recipients_accountids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCGiftedItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_giftdefindex;
        break;
      }

      // optional uint32 giftdefindex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_giftdefindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giftdefindex_)));
          set_has_giftdefindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_max_gifts_possible;
        break;
      }

      // optional uint32 max_gifts_possible = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_gifts_possible:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_gifts_possible_)));
          set_has_max_gifts_possible();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_num_eligible_recipients;
        break;
      }

      // optional uint32 num_eligible_recipients = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num_eligible_recipients:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_eligible_recipients_)));
          set_has_num_eligible_recipients();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_recipients_accountids;
        break;
      }

      // repeated uint32 recipients_accountids = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recipients_accountids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_recipients_accountids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_recipients_accountids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_recipients_accountids;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgGCGiftedItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional uint32 giftdefindex = 2;
  if (has_giftdefindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->giftdefindex(), output);
  }

  // optional uint32 max_gifts_possible = 3;
  if (has_max_gifts_possible()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_gifts_possible(), output);
  }

  // optional uint32 num_eligible_recipients = 4;
  if (has_num_eligible_recipients()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num_eligible_recipients(), output);
  }

  // repeated uint32 recipients_accountids = 5;
  for (int i = 0; i < this->recipients_accountids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->recipients_accountids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGCGiftedItems::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional uint32 giftdefindex = 2;
  if (has_giftdefindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->giftdefindex(), target);
  }

  // optional uint32 max_gifts_possible = 3;
  if (has_max_gifts_possible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_gifts_possible(), target);
  }

  // optional uint32 num_eligible_recipients = 4;
  if (has_num_eligible_recipients()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num_eligible_recipients(), target);
  }

  // repeated uint32 recipients_accountids = 5;
  for (int i = 0; i < this->recipients_accountids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->recipients_accountids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGCGiftedItems::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional uint32 giftdefindex = 2;
    if (has_giftdefindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->giftdefindex());
    }

    // optional uint32 max_gifts_possible = 3;
    if (has_max_gifts_possible()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_gifts_possible());
    }

    // optional uint32 num_eligible_recipients = 4;
    if (has_num_eligible_recipients()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_eligible_recipients());
    }

  }
  // repeated uint32 recipients_accountids = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->recipients_accountids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->recipients_accountids(i));
    }
    total_size += 1 * this->recipients_accountids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGiftedItems::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCGiftedItems* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCGiftedItems*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCGiftedItems::MergeFrom(const CMsgGCGiftedItems& from) {
  GOOGLE_CHECK_NE(&from, this);
  recipients_accountids_.MergeFrom(from.recipients_accountids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
    if (from.has_giftdefindex()) {
      set_giftdefindex(from.giftdefindex());
    }
    if (from.has_max_gifts_possible()) {
      set_max_gifts_possible(from.max_gifts_possible());
    }
    if (from.has_num_eligible_recipients()) {
      set_num_eligible_recipients(from.num_eligible_recipients());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCGiftedItems::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGiftedItems::CopyFrom(const CMsgGCGiftedItems& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGiftedItems::IsInitialized() const {

  return true;
}

void CMsgGCGiftedItems::Swap(CMsgGCGiftedItems* other) {
  if (other != this) {
    std::swap(accountid_, other->accountid_);
    std::swap(giftdefindex_, other->giftdefindex_);
    std::swap(max_gifts_possible_, other->max_gifts_possible_);
    std::swap(num_eligible_recipients_, other->num_eligible_recipients_);
    recipients_accountids_.Swap(&other->recipients_accountids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCGiftedItems::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCGiftedItems_descriptor_;
  metadata.reflection = CMsgGCGiftedItems_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgApplyAutograph::kAutographItemIdFieldNumber;
const int CMsgApplyAutograph::kItemItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgApplyAutograph::CMsgApplyAutograph()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgApplyAutograph::InitAsDefaultInstance() {
}

CMsgApplyAutograph::CMsgApplyAutograph(const CMsgApplyAutograph& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgApplyAutograph::SharedCtor() {
  _cached_size_ = 0;
  autograph_item_id_ = GOOGLE_ULONGLONG(0);
  item_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgApplyAutograph::~CMsgApplyAutograph() {
  SharedDtor();
}

void CMsgApplyAutograph::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgApplyAutograph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgApplyAutograph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgApplyAutograph_descriptor_;
}

const CMsgApplyAutograph& CMsgApplyAutograph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgApplyAutograph* CMsgApplyAutograph::default_instance_ = NULL;

CMsgApplyAutograph* CMsgApplyAutograph::New() const {
  return new CMsgApplyAutograph;
}

void CMsgApplyAutograph::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    autograph_item_id_ = GOOGLE_ULONGLONG(0);
    item_item_id_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgApplyAutograph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 autograph_item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &autograph_item_id_)));
          set_has_autograph_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_item_id;
        break;
      }

      // optional uint64 item_item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_item_id_)));
          set_has_item_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgApplyAutograph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 autograph_item_id = 1;
  if (has_autograph_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->autograph_item_id(), output);
  }

  // optional uint64 item_item_id = 2;
  if (has_item_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgApplyAutograph::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 autograph_item_id = 1;
  if (has_autograph_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->autograph_item_id(), target);
  }

  // optional uint64 item_item_id = 2;
  if (has_item_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgApplyAutograph::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 autograph_item_id = 1;
    if (has_autograph_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->autograph_item_id());
    }

    // optional uint64 item_item_id = 2;
    if (has_item_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgApplyAutograph::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgApplyAutograph* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgApplyAutograph*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgApplyAutograph::MergeFrom(const CMsgApplyAutograph& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_autograph_item_id()) {
      set_autograph_item_id(from.autograph_item_id());
    }
    if (from.has_item_item_id()) {
      set_item_item_id(from.item_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgApplyAutograph::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyAutograph::CopyFrom(const CMsgApplyAutograph& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyAutograph::IsInitialized() const {

  return true;
}

void CMsgApplyAutograph::Swap(CMsgApplyAutograph* other) {
  if (other != this) {
    std::swap(autograph_item_id_, other->autograph_item_id_);
    std::swap(item_item_id_, other->item_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgApplyAutograph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgApplyAutograph_descriptor_;
  metadata.reflection = CMsgApplyAutograph_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgCasketItem::kCasketItemIdFieldNumber;
const int CMsgCasketItem::kItemItemIdFieldNumber;
#endif  // !_MSC_VER

CMsgCasketItem::CMsgCasketItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgCasketItem::InitAsDefaultInstance() {
}

CMsgCasketItem::CMsgCasketItem(const CMsgCasketItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgCasketItem::SharedCtor() {
  _cached_size_ = 0;
  casket_item_id_ = GOOGLE_ULONGLONG(0);
  item_item_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgCasketItem::~CMsgCasketItem() {
  SharedDtor();
}

void CMsgCasketItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgCasketItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCasketItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgCasketItem_descriptor_;
}

const CMsgCasketItem& CMsgCasketItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgCasketItem* CMsgCasketItem::default_instance_ = NULL;

CMsgCasketItem* CMsgCasketItem::New() const {
  return new CMsgCasketItem;
}

void CMsgCasketItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    casket_item_id_ = GOOGLE_ULONGLONG(0);
    item_item_id_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgCasketItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 casket_item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &casket_item_id_)));
          set_has_casket_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_item_id;
        break;
      }

      // optional uint64 item_item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_item_id_)));
          set_has_item_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgCasketItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 casket_item_id = 1;
  if (has_casket_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->casket_item_id(), output);
  }

  // optional uint64 item_item_id = 2;
  if (has_item_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgCasketItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 casket_item_id = 1;
  if (has_casket_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->casket_item_id(), target);
  }

  // optional uint64 item_item_id = 2;
  if (has_item_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgCasketItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 casket_item_id = 1;
    if (has_casket_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->casket_item_id());
    }

    // optional uint64 item_item_id = 2;
    if (has_item_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCasketItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgCasketItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgCasketItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgCasketItem::MergeFrom(const CMsgCasketItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_casket_item_id()) {
      set_casket_item_id(from.casket_item_id());
    }
    if (from.has_item_item_id()) {
      set_item_item_id(from.item_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgCasketItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCasketItem::CopyFrom(const CMsgCasketItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCasketItem::IsInitialized() const {

  return true;
}

void CMsgCasketItem::Swap(CMsgCasketItem* other) {
  if (other != this) {
    std::swap(casket_item_id_, other->casket_item_id_);
    std::swap(item_item_id_, other->item_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgCasketItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgCasketItem_descriptor_;
  metadata.reflection = CMsgCasketItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCUserTrackTimePlayedConsecutively::kStateFieldNumber;
#endif  // !_MSC_VER

CMsgGCUserTrackTimePlayedConsecutively::CMsgGCUserTrackTimePlayedConsecutively()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGCUserTrackTimePlayedConsecutively::InitAsDefaultInstance() {
}

CMsgGCUserTrackTimePlayedConsecutively::CMsgGCUserTrackTimePlayedConsecutively(const CMsgGCUserTrackTimePlayedConsecutively& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGCUserTrackTimePlayedConsecutively::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCUserTrackTimePlayedConsecutively::~CMsgGCUserTrackTimePlayedConsecutively() {
  SharedDtor();
}

void CMsgGCUserTrackTimePlayedConsecutively::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCUserTrackTimePlayedConsecutively::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCUserTrackTimePlayedConsecutively::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCUserTrackTimePlayedConsecutively_descriptor_;
}

const CMsgGCUserTrackTimePlayedConsecutively& CMsgGCUserTrackTimePlayedConsecutively::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCUserTrackTimePlayedConsecutively* CMsgGCUserTrackTimePlayedConsecutively::default_instance_ = NULL;

CMsgGCUserTrackTimePlayedConsecutively* CMsgGCUserTrackTimePlayedConsecutively::New() const {
  return new CMsgGCUserTrackTimePlayedConsecutively;
}

void CMsgGCUserTrackTimePlayedConsecutively::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCUserTrackTimePlayedConsecutively::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgGCUserTrackTimePlayedConsecutively::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGCUserTrackTimePlayedConsecutively::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGCUserTrackTimePlayedConsecutively::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCUserTrackTimePlayedConsecutively::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCUserTrackTimePlayedConsecutively* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCUserTrackTimePlayedConsecutively*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCUserTrackTimePlayedConsecutively::MergeFrom(const CMsgGCUserTrackTimePlayedConsecutively& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCUserTrackTimePlayedConsecutively::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCUserTrackTimePlayedConsecutively::CopyFrom(const CMsgGCUserTrackTimePlayedConsecutively& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCUserTrackTimePlayedConsecutively::IsInitialized() const {

  return true;
}

void CMsgGCUserTrackTimePlayedConsecutively::Swap(CMsgGCUserTrackTimePlayedConsecutively* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCUserTrackTimePlayedConsecutively::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCUserTrackTimePlayedConsecutively_descriptor_;
  metadata.reflection = CMsgGCUserTrackTimePlayedConsecutively_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCItemCustomizationNotification::kItemIdFieldNumber;
const int CMsgGCItemCustomizationNotification::kRequestFieldNumber;
#endif  // !_MSC_VER

CMsgGCItemCustomizationNotification::CMsgGCItemCustomizationNotification()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGCItemCustomizationNotification::InitAsDefaultInstance() {
}

CMsgGCItemCustomizationNotification::CMsgGCItemCustomizationNotification(const CMsgGCItemCustomizationNotification& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGCItemCustomizationNotification::SharedCtor() {
  _cached_size_ = 0;
  request_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCItemCustomizationNotification::~CMsgGCItemCustomizationNotification() {
  SharedDtor();
}

void CMsgGCItemCustomizationNotification::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCItemCustomizationNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCItemCustomizationNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCItemCustomizationNotification_descriptor_;
}

const CMsgGCItemCustomizationNotification& CMsgGCItemCustomizationNotification::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_econ_5fgcmessages_2eproto();
  return *default_instance_;
}

CMsgGCItemCustomizationNotification* CMsgGCItemCustomizationNotification::default_instance_ = NULL;

CMsgGCItemCustomizationNotification* CMsgGCItemCustomizationNotification::New() const {
  return new CMsgGCItemCustomizationNotification;
}

void CMsgGCItemCustomizationNotification::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    request_ = 0u;
  }
  item_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCItemCustomizationNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_item_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_item_id;
        if (input->ExpectTag(16)) goto parse_request;
        break;
      }

      // optional uint32 request = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_request:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_)));
          set_has_request();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgGCItemCustomizationNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_id(i), output);
  }

  // optional uint32 request = 2;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->request(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGCItemCustomizationNotification::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 item_id = 1;
  for (int i = 0; i < this->item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->item_id(i), target);
  }

  // optional uint32 request = 2;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->request(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGCItemCustomizationNotification::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 request = 2;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->request());
    }

  }
  // repeated uint64 item_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_id(i));
    }
    total_size += 1 * this->item_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCItemCustomizationNotification::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCItemCustomizationNotification* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCItemCustomizationNotification*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCItemCustomizationNotification::MergeFrom(const CMsgGCItemCustomizationNotification& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_id_.MergeFrom(from.item_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_request()) {
      set_request(from.request());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCItemCustomizationNotification::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCItemCustomizationNotification::CopyFrom(const CMsgGCItemCustomizationNotification& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCItemCustomizationNotification::IsInitialized() const {

  return true;
}

void CMsgGCItemCustomizationNotification::Swap(CMsgGCItemCustomizationNotification* other) {
  if (other != this) {
    item_id_.Swap(&other->item_id_);
    std::swap(request_, other->request_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCItemCustomizationNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCItemCustomizationNotification_descriptor_;
  metadata.reflection = CMsgGCItemCustomizationNotification_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
